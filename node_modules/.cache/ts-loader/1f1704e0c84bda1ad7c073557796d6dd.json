{"remainingRequest":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/ts-loader/index.js??ref--13-1!/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/myml/Src/deepin/deepin-manual/src/manual-web/src/components/Nav.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/src/components/Nav.vue","mtime":1540289763988},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/cache-loader/dist/cjs.js","mtime":1535964698825},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/ts-loader/index.js","mtime":1535964694475},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/cache-loader/dist/cjs.js","mtime":1535964698825},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/vue-loader/lib/index.js","mtime":1538028549491}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\nexport default Vue.extend({\n    props: {\n        heads: {\n            default: [],\n        },\n    },\n    computed: {\n        nav: function () {\n            return this.$refs.nav;\n        },\n        heading: function () {\n            return this.$store.state.heading;\n        },\n        dict: function () {\n            return this.$store.state.dict;\n        },\n    },\n    watch: {\n        heading: function (val) {\n            var el = this.nav.querySelector(\"[data-id='\" + val + \"']\");\n            if (val === 'h1') {\n                el = this.nav.querySelector('#toIndexPage');\n            }\n            if (el) {\n                scrollIntoView(el, { block: 'nearest' });\n            }\n        },\n    },\n    mounted: function () {\n        this.saveWidth();\n    },\n    updated: function () {\n        this.saveWidth();\n    },\n    methods: {\n        saveWidth: function () {\n            this.$store.commit('setNavWidth', this.nav.clientWidth);\n        },\n        goto: function (id) {\n            this.$store.commit('setHeading', id);\n        },\n    },\n});\n",{"version":3,"file":"/home/myml/Src/deepin/deepin-manual/src/manual-web/src/components/Nav.vue.ts","sourceRoot":"","sources":["/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/myml/Src/deepin/deepin-manual/src/manual-web/src/components/Nav.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"AAmBA,OAAO,GAAoB,MAAM,KAAK,CAAC;AACvC,OAAO,cAAc,MAAM,mCAAmC,CAAC;AAG/D,eAAe,GAAG,CAAC,MAAM,CAAC;IACxB,KAAK,EAAE;QACL,KAAK,EAA0B;YAC7B,OAAO,EAAE,EAAE;SACZ;KACF;IACD,QAAQ,EAAE;QACR,GAAG,EAAH;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAqB,CAAC;QAC1C,CAAC;QACD,OAAO,EAAP;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;QACnC,CAAC;QACD,IAAI,EAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;QAChC,CAAC;KACF;IACD,KAAK,EAAE;QACL,OAAO,YAAC,GAAW;YACjB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,eAAa,GAAG,OAAI,CAAC,CAAC;YACtD,IAAI,GAAG,KAAK,IAAI,EAAE;gBAChB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;aAC7C;YACD,IAAI,EAAE,EAAE;gBACN,cAAc,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;aAC1C;QACH,CAAC;KACF;IACD,OAAO;QACL,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,OAAO,EAAE;QACP,SAAS;YACP,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,YAAC,EAAU;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACvC,CAAC;KACF;CACF,CAAC,CAAC","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue, { PropOptions } from 'vue';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\nimport { Heading } from '../helper/render-man';\n\nexport default Vue.extend({\n  props: {\n    heads: <PropOptions<Heading[]>>{\n      default: [],\n    },\n  },\n  computed: {\n    nav(): HTMLDivElement {\n      return this.$refs.nav as HTMLDivElement;\n    },\n    heading(): string {\n      return this.$store.state.heading;\n    },\n    dict(): { [key: string]: string } {\n      return this.$store.state.dict;\n    },\n  },\n  watch: {\n    heading(val: string) {\n      let el = this.nav.querySelector(`[data-id='${val}']`);\n      if (val === 'h1') {\n        el = this.nav.querySelector('#toIndexPage');\n      }\n      if (el) {\n        scrollIntoView(el, { block: 'nearest' });\n      }\n    },\n  },\n  mounted() {\n    this.saveWidth();\n  },\n  updated() {\n    this.saveWidth();\n  },\n  methods: {\n    saveWidth() {\n      this.$store.commit('setNavWidth', this.nav.clientWidth);\n    },\n    goto(id: string) {\n      this.$store.commit('setHeading', id);\n    },\n  },\n});\n"]}]}