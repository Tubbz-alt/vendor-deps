{"remainingRequest":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/myml/Src/deepin/deepin-manual/src/manual-web/src/components/Scrollbar.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/src/components/Scrollbar.vue","mtime":1540289763988},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/ts-loader/index.js","mtime":1535964694475},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/cache-loader/dist/cjs.js","mtime":1535964698825},{"path":"/home/myml/Src/deepin/deepin-manual/src/manual-web/node_modules/vue-loader/lib/index.js","mtime":1538028549491}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { debounce } from 'lodash';\n\nimport 'perfect-scrollbar/css/perfect-scrollbar.css';\n\nexport default Vue.extend({\n  props: {\n    // 以当前路由保存滚动位置信息\n    savePosition: Boolean,\n    // 为true时,以query参数细分位置信息\n    full: Boolean,\n  },\n  data() {\n    return {\n      interval: 0,\n    };\n  },\n  computed: {\n    saveKey(): string {\n      if (this.full) {\n        return this.$route.fullPath;\n      } else {\n        return this.$route.path;\n      }\n    },\n    savedPosition(): { x: number; y: number } {\n      return this.$store.state.positions[this.saveKey];\n    },\n    container(): HTMLElement {\n      return this.$refs.container as HTMLElement;\n    },\n  },\n  watch: {\n    saveKey() {\n      this.loadPosition();\n    },\n  },\n  mounted() {\n    const el = this.container;\n    const scrollbar = new PerfectScrollbar(el, {\n      minScrollbarLength: 100,\n      wheelPropagation: false,\n    });\n    el.addEventListener('ps-scroll-x', this.scroll);\n    el.addEventListener('ps-scroll-y', this.scroll);\n    this.loadPosition();\n    this.interval = setInterval(() => {\n      scrollbar.update();\n    }, 300);\n  },\n  destroyed() {\n    clearInterval(this.interval);\n  },\n  methods: {\n    loadPosition() {\n      window.requestIdleCallback(() => {\n        if (this.savedPosition) {\n          console.log(this.saveKey, this.savedPosition);\n          this.container.scrollTop = this.savedPosition.y;\n          this.container.scrollLeft = this.savedPosition.x;\n        } else {\n          this.container.scrollTop = 0;\n          this.container.scrollLeft = 0;\n        }\n      });\n    },\n    scroll(e: Event) {\n      this.$emit('scroll', e);\n      if (this.savePosition) {\n        const el = e.srcElement as HTMLDivElement;\n        const position = {\n          name: this.saveKey,\n          x: el.scrollLeft,\n          y: el.scrollTop,\n        };\n        this.$store.commit('savePosition', position);\n      }\n    },\n  },\n});\n",{"version":3,"sources":["Scrollbar.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scrollbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"scrollbar\" ref=\"container\">\n    <div>\n      <slot></slot>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { debounce } from 'lodash';\n\nimport 'perfect-scrollbar/css/perfect-scrollbar.css';\n\nexport default Vue.extend({\n  props: {\n    // 以当前路由保存滚动位置信息\n    savePosition: Boolean,\n    // 为true时,以query参数细分位置信息\n    full: Boolean,\n  },\n  data() {\n    return {\n      interval: 0,\n    };\n  },\n  computed: {\n    saveKey(): string {\n      if (this.full) {\n        return this.$route.fullPath;\n      } else {\n        return this.$route.path;\n      }\n    },\n    savedPosition(): { x: number; y: number } {\n      return this.$store.state.positions[this.saveKey];\n    },\n    container(): HTMLElement {\n      return this.$refs.container as HTMLElement;\n    },\n  },\n  watch: {\n    saveKey() {\n      this.loadPosition();\n    },\n  },\n  mounted() {\n    const el = this.container;\n    const scrollbar = new PerfectScrollbar(el, {\n      minScrollbarLength: 100,\n      wheelPropagation: false,\n    });\n    el.addEventListener('ps-scroll-x', this.scroll);\n    el.addEventListener('ps-scroll-y', this.scroll);\n    this.loadPosition();\n    this.interval = setInterval(() => {\n      scrollbar.update();\n    }, 300);\n  },\n  destroyed() {\n    clearInterval(this.interval);\n  },\n  methods: {\n    loadPosition() {\n      window.requestIdleCallback(() => {\n        if (this.savedPosition) {\n          console.log(this.saveKey, this.savedPosition);\n          this.container.scrollTop = this.savedPosition.y;\n          this.container.scrollLeft = this.savedPosition.x;\n        } else {\n          this.container.scrollTop = 0;\n          this.container.scrollLeft = 0;\n        }\n      });\n    },\n    scroll(e: Event) {\n      this.$emit('scroll', e);\n      if (this.savePosition) {\n        const el = e.srcElement as HTMLDivElement;\n        const position = {\n          name: this.saveKey,\n          x: el.scrollLeft,\n          y: el.scrollTop,\n        };\n        this.$store.commit('savePosition', position);\n      }\n    },\n  },\n});\n</script>\n<style lang=\"scss\" scoped>\n.scrollbar {\n  position: relative;\n  height: 100%;\n  overflow: auto;\n}\n</style>\n"]}]}